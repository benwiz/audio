{"version":3,"sources":["shadow/cljs/devtools/client/hud.cljs"],"mappings":"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","names":["goog/define","shadow.cljs.devtools.client.hud/open-file","js/console.log","file","line","column","shadow.xhr.chan.cljs$core$IFn$_invoke$arity$4","shadow.cljs.devtools.client.env/get-url-base","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1","cljs.core.async.impl.dispatch/run","state_50134","state_val_50135","statearr-50136","cljs.core.async.impl.ioc-helpers/take!","inst_50098","cljs.core/not","inst_50104","inst_50105","statearr-50137","statearr-50138","statearr-50139","statearr-50140","inst_50107","cljs.core/PROTOCOL_SENTINEL","inst_50109","inst_50108","inst_50110","inst_50111","statearr-50141","statearr-50142","statearr-50143","inst_50130","statearr-50144","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","statearr-50145","inst_50120","statearr-50146","inst_50099","statearr-50147","statearr-50148","statearr-50149","inst_50115","statearr-50150","cljs.core.async.impl.ioc-helpers/return-chan","inst_50132","cljs.core.get.cljs$core$IFn$_invoke$arity$2","inst_50123","inst_50124","statearr-50156","inst_50125","statearr-50157","statearr-50158","statearr-50164","inst_50128","statearr-50165","inst_50118","statearr-50167","statearr-50172","statearr-50174","state-machine__45901__auto__","switch__45900__auto__","cljs.core/keyword-identical?","result__45903__auto__","e50175","js/Object","statearr-50176","ex__45904__auto__","cljs.core.async.impl.ioc-helpers/process-exception","ret-value__45902__auto__","f__46075__auto__","statearr-50177","cljs.core.async.impl.ioc-helpers/USER-START-IDX","c__46074__auto__","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","state__46076__auto__","req","js/console.warn","G__50180","shadow.cljs.devtools.client.hud/dom-insert","js/Error","shadow.cljs.devtools.client.hud.dom_insert.cljs$core$IFn$_invoke$arity$2","js/document.body","node","shadow.dom/dom-node","el","cljs.core/seq","id","temp__5739__auto__","shadow.dom.by_id.cljs$core$IFn$_invoke$arity$1","shadow.dom/remove","x","shadow.dom.append.cljs$core$IFn$_invoke$arity$2","where","shadow.cljs.devtools.client.hud/hud-id","shadow.cljs.devtools.client.hud/load-id","shadow.cljs.devtools.client.hud/logo-svg","cljs.core/Delay","shadow.dom.svg.cljs$core$IFn$_invoke$arity$variadic","s-path","shadow.cljs.devtools.client.hud/load-start","shadow.cljs.devtools.client.hud/show-progress","cljs.core/deref","shadow.cljs.devtools.client.hud.dom_insert.cljs$core$IFn$_invoke$arity$1","shadow.cljs.devtools.client.hud/load-end-success","container-el","shadow.animate/start","shadow.animate.transition.cljs$core$IFn$_invoke$arity$4","state_50193","state_val_50194","inst_50181","inst_50185","cljs.core/PersistentHashMap","inst_50184","inst_50186","inst_50187","statearr-50195","inst_50183","inst_50188","statearr-50196","inst_50190","inst_50191","statearr-50197","e50198","statearr-50199","statearr-50200","cljs.core.async/timeout","shadow.cljs.devtools.client.hud/load-end","shadow.cljs.devtools.client.hud/hud-hide","d","shadow.cljs.devtools.client.hud/source-line-styles","shadow.cljs.devtools.client.hud/source-highlight-styles","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","shadow.cljs.devtools.client.hud/source-line-html","cljs.core/LazySeq","s__50202","temp__5735__auto__","cljs.core/chunked-seq?","cljs.core/count","c__4432__auto__","cljs.core/chunk-buffer","size__4433__auto__","i__50203","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","vec__50205","cljs.core/chunk-append","b__50204","cljs.core/chunk-cons","cljs.core/chunk","iter__50201","cljs.core/chunk-rest","cljs.core/first","vec__50212","cljs.core/cons","cljs.core/rest","iter__4434__auto__","cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2","cljs.core/vector","lines","styles","G__50209","G__50210","G__50211","G__50215","G__50216","G__50217","goog.string/format","idx","start-idx","text","shadow.cljs.devtools.client.hud/sep-length","G__50219","shadow.cljs.devtools.client.hud/sep-line","shadow.cljs.devtools.client.hud.sep_line.cljs$core$IFn$_invoke$arity$2","js/Math.max","offset","label","cljs.core.repeat.cljs$core$IFn$_invoke$arity$2","c","clojure.string.join.cljs$core$IFn$_invoke$arity$2","sep","sep-len","len","p__50221","map__50223","shadow.cljs.devtools.client.hud/file-link","resource-name","shadow.dom.ev_stop.cljs$core$IFn$_invoke$arity$1","e","p__50226","map__50227","shadow.cljs.devtools.client.hud/html-for-warning","warning","source-excerpt","map__50229","before","or__4047__auto__","arrow-idx","msg","shadow.cljs.devtools.client.hud.sep_line.cljs$core$IFn$_invoke$arity$0","after","p__50232","map__50233","shadow.cljs.devtools.client.hud/hud-warnings","map__50235","info","sources","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","cljs.core.filter.cljs$core$IFn$_invoke$arity$2","p1__50231#","cljs.core.into.cljs$core$IFn$_invoke$arity$2","sources-with-warnings","shadow.cljs.devtools.client.hud/show-warnings","s__50238","xs__6292__auto__","map__50244","s__50240","i__50241","b__50242","iter__50239","iterys__4430__auto__","fs__4431__auto__","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","iter__50237","warnings","p__50246","map__50247","shadow.cljs.devtools.client.hud/hud-error","shadow.cljs.devtools.client.hud/show-errors","report","shadow.cljs.devtools.client.hud/connection-error-id","shadow.cljs.devtools.client.hud/connection-error-clear!","shadow.cljs.devtools.client.hud/connection-error","shadow.cljs.devtools.client.hud/load-failure","js/console.error","error","cljs.core/chunk-first"],"sourcesContent":["(ns shadow.cljs.devtools.client.hud\n  (:require\n    [shadow.dom :as dom]\n    [shadow.xhr :as xhr]\n    [shadow.animate :as anim]\n    [shadow.cljs.devtools.client.env :as env]\n    [cljs.core.async :as async :refer (go)]\n    [goog.string.format]\n    [goog.string :refer (format)]\n    [clojure.string :as str]))\n\n(goog-define show-progress true)\n\n(goog-define show-warnings true)\n\n(goog-define show-errors true)\n\n(defn open-file [file line column]\n  (js/console.log \"opening file\" file line column)\n\n  (let [req\n        (xhr/chan :POST\n          (str (env/get-url-base) \"/api/open-file\")\n          {:file file\n           :line line\n           :column column}\n          {:with-credentials false\n           :body-only true})]\n    (go (when-some [{:keys [exit] :as result} (<! req)]\n          (when-not (zero? exit)\n            (js/console.warn \"file open failed\" result))\n          ))))\n\n(defn dom-insert\n  ([node]\n   (dom-insert js/document.body node))\n  ([where node]\n   (let [el (dom/dom-node node)\n         id (.-id el)]\n     (assert (seq id))\n     (when-some [x (dom/by-id id)]\n       (dom/remove x))\n     (dom/append where el)\n     )))\n\n(def hud-id \"shadow-hud-container\")\n\n(def load-id \"shadow-hud-loading-container\")\n\n(def logo-svg\n  (delay\n    (let [s-path\n          \"M247.183941,141.416413 C247.183941,74.7839971 148.383423,78.9723529 148.383423,141.416413 C148.383423,203.860473 265.090698,171.864644 265.090698,248.900057 C265.090698,325.93547 135,325.851749 135,251.708304\"]\n      (dom/svg\n        {:id \"shadow-cljs-logo\"\n         :version \"1.1\"\n         :viewBox \"0 0 400 400\"\n         :style {:display \"block\"}\n         :height \"60px\"\n         :width \"60px\"}\n        [:title \"shadow-cljs\"]\n        [:defs\n         [:mask#shadow-cljs-logo-mask {:fill \"#fff\"}\n          [:circle {:r \"200\" :cy \"200\" :cx \"200\"}]]]\n        [:g\n         {:fill-rule \"evenodd\"\n          :fill \"none\"\n          :stroke-width \"0\"\n          :stroke \"none\"\n          :mask \"url(#shadow-cljs-logo-mask)\"}\n\n         [:g.circles\n          [:circle.blue {:r \"200\" :cy \"200\" :cx \"200\" :fill \"#4F80DF\"}]\n          [:circle.light-blue {:r \"71.5\" :cy \"200\" :cx \"370\" :fill \"#89B4FF\"}]\n          [:circle.dark-green {:r \"180\" :cy \"360\" :cx \"60\" :fill \"#40B400\"}]\n          [:circle.light-green {:r \"129\" :cy \"320\" :cx \"280\" :fill \"#76E013\"}]\n          [:animateTransform\n           {:attributeType \"xml\"\n            :attributeName \"transform\"\n            :type \"rotate\"\n            :from \"0 200 200\"\n            :to \"360 200 200\"\n            :dur \"3s\"\n            :repeatCount \"indefinite\"}]]\n\n         ;; S shadow\n         [:g {:transform \"translate(10,10)\"}\n          [:path\n           {:stroke-linecap \"square\"\n            :stroke-width \"16\"\n            :stroke \"#aaa\"\n            :d s-path}]]\n         ;; S\n         [:path\n          {:stroke-linecap \"square\"\n           :stroke-width \"16\"\n           :stroke \"#FFFFFF\"\n           :d s-path}]\n         ]))))\n\n(defn load-start []\n  (when show-progress\n    (dom-insert\n      [:div {:id load-id\n             :style {:position \"fixed\"\n                     :pointer-events \"none\"\n                     :left \"0px\"\n                     :bottom \"20px\"\n                     :z-index \"10000\"}}\n       [:div {:style {:background \"#eee\"\n                      :border-top-right-radius \"40px\"\n                      :border-bottom-right-radius \"40px\"\n                      :box-shadow \"2px 2px 10px #aaa\"\n                      :padding \"10px\"}}\n        @logo-svg]])))\n\n(defn load-end-success []\n  (when show-progress\n    (when-some [container-el (dom/by-id load-id)]\n      (let [el (.-firstChild container-el)]\n        (anim/start 500 {el (anim/transition :background \"#eee\" \"#40B400\" \"ease-out\")})\n        (go (<! (async/timeout 250))\n            (<! (anim/start 250 {el (anim/transition :opacity \"1\" \"0\" \"ease-in\")}))\n            (dom/remove container-el)\n\n            )))))\n\n(defn load-end []\n  (when-some [el (dom/by-id load-id)]\n    (dom/remove el)))\n\n(defn hud-hide []\n  (when-some [d (dom/by-id hud-id)]\n    (dom/remove d)))\n\n(def source-line-styles\n  {:padding \"0\"\n   :margin \"0\"})\n\n(def source-highlight-styles\n  (assoc source-line-styles\n    :font-weight \"bold\"))\n\n(defn source-line-html\n  [start-idx lines styles]\n  (->> (for [[idx text] (map-indexed vector lines)]\n         [:pre {:style styles} (format \"%4d | %s\" (+ 1 idx start-idx) text)])))\n\n(def sep-length 80)\n\n(defn sep-line\n  ([]\n   (sep-line \"\" 0))\n  ([label offset]\n   (let [sep-len (js/Math.max sep-length offset)\n         len (count label)\n\n         sep\n         (fn [c]\n           (->> (repeat c \"-\")\n                (str/join \"\")))]\n     (str (sep offset) label (sep (- sep-len (+ offset len)))))))\n\n(defn file-link [{:keys [resource-name file line column] :as warning}]\n  (if-not file\n    [:span resource-name]\n\n    [:span {:style {:text-decoration \"underline\"\n                    :color \"blue\"\n                    :cursor \"pointer\"}\n            :on {:click (fn [e]\n                          (dom/ev-stop e)\n                          (open-file file line column)\n                          )}}\n\n     resource-name]))\n\n(defn html-for-warning [{:keys [resource-name msg file line column source-excerpt] :as warning}]\n  [:div {:style {:border \"2px solid #ccc\"\n\n                 :margin-bottom \"10px\"}}\n\n   [:div {:style {:line-height \"16px\"\n                  :background-color \"#fadb64\"\n                  :padding \"10px\"\n                  :font-size \"1.2em\"\n                  :font-weight \"bold\"}}\n    [:span \"WARNING in \"]\n    (file-link warning)]\n\n   (when source-excerpt\n     (let [{:keys [start-idx before line after]} source-excerpt]\n       [:div {:style {:padding \"10px 10px\"\n                      :background-color \"#fff\"\n                      :border-top \"2px solid #ccc\"}}\n        (source-line-html start-idx before source-line-styles)\n        (source-line-html (+ start-idx (count before)) [line] source-highlight-styles)\n        (let [arrow-idx (+ 6 (or column 1))]\n          [:pre {:style source-highlight-styles} (sep-line \"^\" arrow-idx)])\n        [:div {:style {:font-weight \"bold\" :font-size \"1.2em\" :padding \"10px 0\"}} msg]\n        [:pre {:style source-highlight-styles} (sep-line)]\n        (source-line-html (+ start-idx (count before) 1) after source-line-styles)]\n       ))])\n\n(defn hud-warnings [{:keys [type info] :as msg}]\n  (let [{:keys [sources]}\n        info\n\n        sources-with-warnings\n        (->> sources\n             (remove :from-jar)\n             (filter #(seq (:warnings %)))\n             (into []))]\n\n    (when (seq sources-with-warnings)\n      ;; TODO: fancy transition from logo to warnings\n      (load-end)\n      (when show-warnings\n        (dom-insert\n          [:div\n           {:id hud-id\n            :style {:position \"fixed\"\n                    :z-index \"10000\"\n                    :left \"0px\"\n                    :bottom \"0px\"\n                    :right \"0px\"\n                    :display \"flex\"\n                    :flex-direction \"column\"\n                    :font-family \"monospace\"\n                    :font-size \"12px\"}}\n           [:div {:style {:align-self \"flex-end\"\n                          :background \"#fff\"\n                          :border \"2px solid #ccc\"\n                          :border-bottom \"0px\"\n                          :cursor \"pointer\"\n                          :padding \"6px\"\n                          :margin-bottom \"-2px\"\n                          :z-index \"10000\"}\n                  :on {:click hud-hide}}\n            \"Close\"]\n           [:div {:style {:background \"#fff\"\n                          :border-top \"2px solid #ccc\"\n                          :flex \"1\"\n                          :max-height \"300px\"\n                          :padding \"10px 10px 0\"\n                          :overflow \"auto\"}}\n            (for [{:keys [warnings]} sources-with-warnings\n                  warning warnings]\n              (html-for-warning warning))]])))))\n\n(defn hud-error [{:keys [report] :as msg}]\n  (when show-errors\n    (dom-insert\n      [:div\n       {:id hud-id\n        :style {:position \"fixed\"\n                :left \"0px\"\n                :top \"0px\"\n                :bottom \"0px\"\n                :right \"0px\"\n                :color \"#000\"\n                :background-color \"#fff\"\n                :border \"5px solid red\"\n                :z-index \"10000\"\n                :padding \"20px\"\n                :overflow \"auto\"\n                :font-family \"monospace\"\n                :font-size \"12px\"}}\n       [:div {:style \"color: red; margin-bottom: 10px; font-size: 2em;\"} \"Compilation failed!\"]\n       [:pre report]])))\n\n(def connection-error-id \"shadow-connection-error\")\n\n(defn connection-error-clear! []\n  (when-some [x (dom/by-id connection-error-id)]\n    (dom/remove x)))\n\n(defn connection-error [msg]\n  (when show-errors\n    (dom-insert\n      [:div {:id connection-error-id\n             :style {:position \"fixed\"\n                     :pointer-events \"none\"\n                     :left \"0px\"\n                     :bottom \"20px\"\n                     :z-index \"10000\"}}\n       [:div {:style {:background \"#c00\"\n                      :border-top-right-radius \"40px\"\n                      :border-bottom-right-radius \"40px\"\n                      :box-shadow \"2px 2px 10px #aaa\"\n                      :padding \"10px\"\n                      :font-family \"monospace\"\n                      :font-size \"14px\"\n                      :font-weight \"bold\"\n                      :color \"#fff\"}}\n        (str \"shadow-cljs - \" msg)\n        ]])))\n\n(defn load-failure [error task remaining]\n  (load-end)\n  (js/console.error \"reload-failed\" error)\n  (connection-error (str \"[reload failed] \" (.-message error))))"]}