{"version":3,"sources":["gui/view.cljs"],"mappings":";;;;;;AAOA,AAAA,AAAKA;AACL,AAAA,AAAKC;AAEL,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC;AAML,AAAA,AAAMC,AAAS;AAAf,AACE,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAmBF,AAGA,AAAK;AAAL,AACE,AAAM,AAACG,AAAEJ,AAAc,AAAIK;AAA3B,AACE,AAAO,AAACC,AAASP,AACV,AAAK;AAAL,AACE,AAACQ,AAAeC;;AAChB,AAAU,AAAA,AAACJ,AAAM,AAAUI;AAA3B;;AAAA,AACE,AAAA,AAACD;;;;AALd;;AAJrB;;AAYF,AAAA,AAAME;AAAN,AACE,AAAAN,AAAA,AAAA,AACO,AAAAO,AAAA,AAAA,AAAA,AAAIR","names":["gui.view/url","gui.view/space-keycode","gui.view/style","gui.view/trigger","js/crinkle.component.react-createElement*","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","e","js/fetch","js/console.log","response","gui.view/app","crinkle.component/create-element-raw-props"],"sourcesContent":["(ns gui.view\n  (:require\n   [\"react\" :as react]\n   [crinkle.dom :as d]\n   [crinkle.component :refer [CE RE]]\n   [clojure.string :as str]))\n\n(def url \"http://localhost:8000/trigger\")\n(def space-keycode 32)\n\n(def style\n  #js{:height          \"250px\"\n      :width           \"100%\"\n      :backgroundColor \"#FFDDDD\"\n      :margin          \"20px\"})\n\n(defn trigger [_]\n  (d/div {:style     style\n          :className \"pressed\"\n          :tabIndex  \"1\" ;; Necessary to allow the div to be \"selected\"\n          :onKeyDown (fn [e]\n                       (when (= space-keycode (.. e -keyCode))\n                         (.then (js/fetch url)\n                                (fn [response]\n                                  (js/console.log response)\n                                  (when-not (= 200 (.-status response))\n                                    (js/console.log \"Error!!\"))))))}\n         \"Select this div, then press SPACE to send the trigger\"))\n\n(defn app []\n  (d/div nil\n         (CE trigger {})))\n"]}